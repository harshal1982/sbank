const sql = require ('mssql');
const Sequelize = require ('sequelize');
var EncryptedField = require ('sequelize-encrypted');

//Any 64character key generated by Openssl rsa
// On bash > openssl rand -hex 32
var key = 'a317cf49dd42b84271b5029cc5db17884c0ff3ed6f3e3b8fdb47c8e9d1458d3d';

//Azure SQL Credetials and Connection String Details
const sequelize = new Sequelize ('{database}', '{user}', '{password}', {
	  host: {hostname},
	  dialect: 'mssql',
	  operatorsAliases: false,
	  pool: {
		max: 5,
		min: 0,
		acquire: 30000,
		idle: 10000,
	  },
	  dialectOptions: {
		encrypt: true,
	  },
});
    
 var enc_fields = EncryptedField (Sequelize, key);

 var User = sequelize.define ('user', {
      name: Sequelize.STRING,
      encrypted: enc_fields.vault ('encrypted'),
      // encrypted virtual fields
      private_1: enc_fields.field ('private_1'),
      private_2: enc_fields.field ('private_2'),
    });

    User.sync({force: true})
    const user = User.build ();
	// PII encrypted to be stored in SQL.
    user.private_1 = {name};
    user.private_2 = {dob};
    user.save ().then (() => {
      User.findAll ().then (founds => {
        founds.forEach (found => {
          console.log (found.private_1 + '' + found.private_2);
        });
      });
 });